{
  "html": "<p>Tweed works very well for initially server rendered apps. Rendering the app as a string is\neasy enough:</p>\n<example-slot></example-slot><p>But because the server and the browser are two distinctly different environments, here&#39;s\nwhere it gets really interesting. Consider this simple app:</p>\n<pre><code class=\"lang-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> VirtualNode</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render </span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>You are currently visiting <span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><p>This won&#39;t work in a Node.js server environment, because the <code>location</code> global does not\nexist. However, using <a href=\"#/docs/patterns/dependency-injection\">Dependency Injection</a> we can make it the\nconsumer code&#39;s business to pass such a variable to the app:</p>\n<example-slot></example-slot><p>Finally, in our two entry point files, we can pass appropriate implementations for that\ndependency:</p>\n<example-slot></example-slot><h3 id=\"talking-to-apis\">Talking to APIs</h3>\n<p>A common issue is when an SSR application needs to talk to some external service. With\nTweed, we can use simple <a href=\"#/docs/philosophy/object-oriented-design\">Object Oriented</a> composition to achieve this\nnicely:</p>\n<example-slot></example-slot><p>Here, a simple service class contains the mapping logic between an external API and some\n<code>User</code> domain object. However, the HTTP request details are abstracted away to an\n<code>ApiClient</code> interface:</p>\n<pre><code class=\"lang-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span><span class=\"token class-name\"> ApiClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>pathname<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name\"> Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>any</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre><p>We can implement two different implementations of this interface; one for the browser\nenvironment, and one for the server:</p>\n<example-slot></example-slot><example-slot></example-slot><p>Finally, we can inject our different implementations into the <code>MyService</code> class:</p>\n<pre><code class=\"lang-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> MyService</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyService'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> BrowserApiClient</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./BrowserApiClient'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">new</span><span class=\"token class-name\"> MyService</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span><span class=\"token class-name\"> BrowserApiClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>",
  "examples": [
    {
      "javascript": "<pre><code class=\"lang-javascript\"><span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed/render/string'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> html <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>",
      "typescript": "<pre><code class=\"lang-typescript\"><span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed/render/string'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>",
      "fiddle": false
    },
    {
      "javascript": "<pre><code class=\"lang-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> VirtualNode</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_location <span class=\"token operator\">=</span> location\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render </span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>You are currently visiting <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "typescript": "<pre><code class=\"lang-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> VirtualNode</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> App</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> _location<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render </span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>You are currently visiting <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "fiddle": false
    },
    {
      "javascript": "<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// client.js</span>\n<span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed/render/dom'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// server.js</span>\n<span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed/render/string'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleRequest </span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> location <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    pathname<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>url\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> html <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token keyword\">end</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "typescript": "<pre><code class=\"lang-typescript\"><span class=\"token comment\" spellcheck=\"true\">// client.ts</span>\n<span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed/render/dom'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// server.ts</span>\n<span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'tweed/render/string'</span>\n<span class=\"token keyword\">import</span><span class=\"token class-name\"> App</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> IncomingMessage</span><span class=\"token punctuation\">,</span><span class=\"token class-name\"> ServerResponse</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'http'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleRequest </span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">:</span><span class=\"token class-name\"> IncomingMessage</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">:</span><span class=\"token class-name\"> ServerResponse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> location <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    pathname<span class=\"token punctuation\">:</span> req<span class=\"token punctuation\">.</span>url\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token class-name\"> App</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> html <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token keyword\">end</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "fiddle": false
    },
    {
      "javascript": "<pre><code class=\"lang-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> MyService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>apiClient<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_apiClient <span class=\"token operator\">=</span> apiClient\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getUser </span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_apiClient<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/users/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "typescript": "<pre><code class=\"lang-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> User</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./User'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> ApiClient</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./ApiClient'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> MyService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> _apiClient<span class=\"token punctuation\">:</span><span class=\"token class-name\"> ApiClient</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getUser </span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name\"> Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>User</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_apiClient<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/users/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "fiddle": false
    },
    {
      "javascript": "<pre><code class=\"lang-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> BrowserApiClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>pathname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`https://api.example.com</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pathname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "typescript": "<pre><code class=\"lang-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> ApiClient</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./ApiClient'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> BrowserApiClient</span> <span class=\"token keyword\">implements</span><span class=\"token class-name\"> ApiClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>pathname<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name\"> Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>any</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`https://api.example.com</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pathname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "fiddle": false
    },
    {
      "javascript": "<pre><code class=\"lang-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> ServerApiClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>pathname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "typescript": "<pre><code class=\"lang-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\"> ApiClient</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./ApiClient'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span><span class=\"token class-name\"> ServerApiClient</span> <span class=\"token keyword\">implements</span><span class=\"token class-name\"> ApiClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>pathname<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name\"> Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>any</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>",
      "fiddle": false
    }
  ]
}